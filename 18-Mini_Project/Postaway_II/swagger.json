{
  "openapi": "3.0.0",
  "info": {
    "title": "Docs for Postaway API",
    "description": "API for Social Media Application",
    "version": "1.0.0"
  },
  "servers": [
    { "url": "http://localhost:3200", "description": "Postaway API" }
  ],
  "components": {
    "securitySchemes": {
      "JWT": {
        "in": "cookie",
        "name": "JWT",
        "type": "apiKey"
      }
    }
  },
  "paths": {
    "/api/users/signUp": {
      "post": {
        "tags": ["Users"],
        "summary": "SignUp",
        "description": "Create Account on Postaway",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "age": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 100
                  },
                  "gender": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "profileImageURL": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created"
          },
          "406": {
            "description": "Not Accepted"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/users/signIn": {
      "post": {
        "tags": ["Users"],
        "summary": "SignIn",
        "requestBody": {
          "required": true,
          "description": "Signin on Postaway",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Incorrect Password"
          },
          "404": {
            "description": "User Not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },

    "/api/users/forgetPassword/generateOtp/{email}": {
      "get": {
        "tags": ["Users"],
        "summary": "Generate OTP",
        "description": "Generate OTP for Reset Password",
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Email which you want to Reset Password"
          }
        ],
        "responses": {
          "200": { "description": "Otp Sent" },
          "404": { "description": "User Not found" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/users/forgetPassword/validateOtp/{email}": {
      "put": {
        "tags": ["Users"],
        "summary": "Validate Otp",
        "description": "Validate Otp and Reset Password",
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Email which You Recieved Otp and want to Change Password"
          }
        ],
        "requestBody": {
          "required": "true",
          "type": "object",
          "description": "Enter Otp and New Password",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string"
                  },
                  "otp": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password Updated"
          },
          "401": {
            "description": "Incorrect Otp"
          },
          "404": {
            "description": "Generate Otp"
          },
          "406": {
            "description": "Otp Expired or Email or Password is Empty"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/users/changePassword": {
      "put": {
        "tags": ["Users"],
        "summary": "Change Password",
        "description": "Change Password Using Existing Password",
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "currentPassword": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password Updated Successfully"
          },
          "401": {
            "description": "Incorrect Current Password"
          },
          "406": {
            "description": "New Password can't be Same as Current Password"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/users/signOut": {
      "delete": {
        "tags": ["Users"],
        "summary": "SignOut",
        "description": "SignOut from Postaway",
        "security": [
          {
            "ApiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorized Access"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/users/signOutAll": {
      "delete": {
        "tags": ["Users"],
        "summary": "SignOut All",
        "description": "SignOut from All Devices",
        "security": [
          {
            "ApiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorized Access"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/posts/createPost": {
      "post": {
        "tags": ["Posts"],
        "summary": "Create Post",
        "description": "Create New Post on Postaway",
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "caption": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "imageURL": {
                    "type": "string",
                    "format": "binary"
                  },
                  "tags": {
                    "type": "string",
                    "description": "*UserId* seprated by **Comma** in case of multiple [Users]"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Post Created"
          },
          "401": {
            "description": "Unauthorized Access"
          },
          "406": {
            "description": "Minimum One field is Required"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/posts/getPosts": {
      "get": {
        "tags": ["Posts"],
        "summary": "Get Posts",
        "description": "Get Posts of Self or Any User",
        "security": [
          {
            "ApiKey": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "description": "Provide UserId which Posts You want to Retrieve otherwise Loggedin User Post is retrieved",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "401": {
            "description": "Unauthorized Access"
          },
          "406": {
            "description": "Incorrect UserId"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/posts/getOnePost/{postId}": {
      "get": {
        "tags": ["Posts"],
        "summary": "Get Post",
        "description": "Get a Single Post of User",
        "security": [
          {
            "ApiKey": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "PostId of Post which you want to get"
          }
        ],
        "responses": {
          "200": {
            "description": "Post fetched"
          },
          "401": {
            "description": "Unauthorized Access"
          },
          "404": {
            "description": "Post not found"
          },
          "406": {
            "description": "Incorrect PostId"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/posts/updatePost/{postId}": {
      "put": {
        "tags": ["Posts"],
        "summary": "Update Post",
        "description": "Update Post on Postaway",
        "security": [
          {
            "ApiKey": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "description": "PostId of Post which you want to Update",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "caption": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "imageURL": {
                    "type": "string",
                    "format": "binary"
                  },
                  "tags": {
                    "type": "string",
                    "description": "*UserId* seprated by **Comma** in case of multiple [Users]"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Post"
          },
          "401": {
            "description": "Unauthorized Access"
          },
          "404": {
            "description": "Post not found"
          },
          "406": {
            "description": "Minimum One Field Required"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/posts/deletePost/{postId}": {
      "delete": {
        "tags": ["Posts"],
        "summary": "Delete Post",
        "description": "Delete a Post on Postaway",
        "security": [
          {
            "ApiKey": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "PostId of Post which you want to Delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Post Deleted"
          },
          "401": {
            "description": "Unauthorized Access"
          },
          "404": {
            "description": "Post not found"
          },
          "406": {
            "description": "Incorrect PostId"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/friends/getFriends": {
      "get": {
        "tags": ["Friends"],
        "summary": "Get Friends",
        "description": "Get Friend List of User",
        "security": [
          {
            "ApiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Friend List"
          },
          "401": {
            "description": "Unauthorized Access"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/friends/sendRequest/{user}": {
      "post": {
        "tags": ["Friends"],
        "summary": "Send Request",
        "description": "Send Friend Request to the User",
        "security": [
          {
            "ApiKey": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "401": {
            "description": "Unauthorized Access"
          },
          "404": {
            "description": "User Not found"
          },
          "406": {
            "description": "InCorrect UserId or Already Sent or Recieve Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/friends/acceptRequest/{user}": {
      "post": {
        "tags": ["Friends"],
        "summary": "Accept Friend Request",
        "description": "Accept Friend Request of the User",
        "security": [
          {
            "ApiKey": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Become Friend"
          },
          "401": {
            "description": "Unauthorized Access"
          },
          "404": {
            "description": "Request Not found"
          },
          "406": {
            "description": "InCorrect UserId or Already a Friend"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/friends/rejectRequest/{user}": {
      "delete": {
        "tags": ["Friends"],
        "summary": "Reject Friend Request",
        "description": "Reject Friend Request of the User",
        "security": [
          {
            "ApiKey": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "401": {
            "description": "Unauthorized Access"
          },
          "404": {
            "description": "Request Not found"
          },
          "406": {
            "description": "InCorrect UserId or Already a Friend"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/friends/removeFriend/{friendId}": {
      "delete": {
        "tags": ["Friends"],
        "summary": "Remove Friend",
        "description": "Remove a User From the Friend List",
        "security": [
          {
            "ApiKey": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "friendId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "401": {
            "description": "Unauthorized Access"
          },
          "404": {
            "description": "Friend not found "
          },
          "406": {
            "description": "Incorrect FriendId"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/likes/addLike": {
      "post": {
        "tags": ["Likes"],
        "summary": "Like Item",
        "description": "Add Like to Post, User or Comment",
        "security": [
          {
            "apiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Likeable Item Id"
                  },
                  "type": {
                    "type": "string",
                    "description": "Specify type of id : [**User**, **Post**, **Comment**]"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized Access"
          },
          "404": {
            "description": "Item not found"
          },
          "406": {
            "description": "Incorrect Id"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/likes/getLikes": {
      "get": {
        "tags": ["Likes"],
        "summary": "Get Likes",
        "description": "Get All Likes of Post, User, Comment",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "Provide id of [**Post**,**User**,**Comment**]"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "description": "Provide type of id [**Post**,**User**,**Comment**]"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "401": {
            "description": "Unauthorized Access"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Incorrect Id or Type"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/likes/removeLike/{likeId}": {
      "put": {
        "tags": ["Likes"],
        "summary": "Dislike Item",
        "description": "Remove Like on Post, User or Comment",
        "security": [
          {
            "apiKey": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "likeId",
            "description": "Likeable Item Id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "type",
            "description": "Specify Type [**User**,**Post**,**Comment**]",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Like Remove Successfully"
          },
          "404": {
            "description": "Like not found"
          },
          "406": {
            "description": "Incorrect Id"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/comments/newComment": {
      "post": {
        "tags": ["Comments"],
        "summary": "Create Comment",
        "description": "Write a Comment on a Post",
        "security": [
          {
            "apiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "postId": {
                    "type": "string"
                  },
                  "comment": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorized Access"
          },
          "404": {
            "description": "Post not found"
          },
          "406": {
            "description": "PostId or Comment Can't be Empty"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/comments/getComments/{postId}": {
      "get": {
        "tags": ["Comments"],
        "summary": "Get Comments",
        "description": "Get All Comments of a Post",
        "security": [
          {
            "apiKey": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorized Access"
          },
          "404": {
            "description": "Post not found"
          },
          "406": {
            "description": "Incorrect PostId"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/comments/getComment/{commentId}": {
      "get": {
        "tags": ["Comments"],
        "summary": "Get Comment",
        "description": "Get a Single Comment of a Post",
        "security": [
          {
            "apiKey": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "commentId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorized Access"
          },
          "404": {
            "description": "Comment not found"
          },
          "406": {
            "description": "Incorrect CommentId"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/comments/updateComment/{postId}": {
      "put": {
        "tags": ["Comments"],
        "summary": "Update Comment",
        "description": "Update a Comment of a Post",
        "security": [
          {
            "apiKey": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "commentId": {
                    "type": "string"
                  },
                  "newComment": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorized Access"
          },
          "404": {
            "description": "Post not found or Comment not found"
          },
          "406": {
            "description": "Incorrect PostId or CommentId"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/comments/deleteComment/{commentId}": {
      "delete": {
        "tags": ["Comments"],
        "summary": "Delete Comment",
        "description": "Delete a Comment of a Post",
        "security": [
          {
            "apiKey": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "commentId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorized Access"
          },
          "404": {
            "description": "Comment not found"
          },
          "406": {
            "description": "Incorrect CommentId"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}
