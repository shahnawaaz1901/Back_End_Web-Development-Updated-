/*
    Whenever we install package a package.json file is created now question is 
    what is this package.json file..?
    
    Working of Package.Json File : 
    1. package.json file manages the depenedencies and list all the dependencies which
        your application uses.

        Dependencies : Here dependencies is external packages.
    2. Package.json also manage the scripts so that whenever we want to run the server
        using nodemon index.js we can run using npm start
    3. Package.json Contains the List of all dependencies with some additional information
        like name ,version, author and github url. You Can Manually added the all details
        in package.json, but if you want that automatically added all things and things which
        you need to enter is only value then you can do this with the help of 
        'npm init' 
        command. this command initialize the npm packages

*/

/*
    Two Type of Dependencies Exist : 
    
    Dev Depenedencies : Dev Dependencies is the dependencies which you used in while 
                in Development Process. Like Packages which restart your server 
                automatically while You Save Your File or packages which is test your
                server. But this Dependencies not nessesory to go in production because 
                in production you never stop your server.This Dependency is only useful
                while in development process.

    Production Dependencies : Production Dependencies is the dependencies which is 
                nessesory while in production phase. Like Databases, template engines
*/

/*
    For installing dev dependencies :
    npm i -D package_name or npm i -save package_name
    
    For installing production dependencies :
    npm i package_name
*/

/*
    When you push whole your application on github then you don't want to upload
    node_modules file on that because this file contains all modules so this file 
    can be very huge in terms of size, so that you should always put this file in 
    gitignore section. But now Question is how can if somebody want to download code 
    from github and want to run server on that system so that he/she not able to run
    the server because the require module files would not be present on that system.
    But package.json contains all dependencies name so that if you want to run the server
    you can install modules one by one, or you can just write npm i command so that 
    whichever module is present in dependencies all modules is installed on your system.
    
    npm i command always install the latest dependencies so this can be break your code
    because probably you can install old version and write code according to that version.
    and it might possible that in future version of that dependencies syntax will be change
    and new syntax comes. For Fixing this Problem package_lock.json file is created by npm
*/

/*
    Working of Package_lock.json
    1. This File was auto generated by npm whenever you initialize the packages.
    2. This file helps us to consistency of versions in different machines.
    3. Prevent unwanted Updates which can break your application

    Due to package_lock.json if you install all dependencies with npm i command
    then only the version in which file is created is install on your system
*/